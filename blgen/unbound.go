// unbound.go -- generate unbound.conf fragment
//
// License GPLv2

package main

import (
	"fmt"
	"io"
	"os"
	"strings"
	"sync"
	"time"

	"github.com/opencoff/unbound-adblock/internal/blgen"
)

func unboundOut(b *blgen.BL, fd io.Writer) {
	var wg sync.WaitGroup

	f := func(w *strings.Builder, in []string) {
		for _, x := range in {
			z := fmt.Sprintf(`    local-zone: "%s" static`, x)
			w.WriteString(z)
			w.WriteRune('\n')
		}
		wg.Done()
	}

	var wd, wh strings.Builder

	wg.Add(2)
	go f(&wd, b.Domains)
	go f(&wh, b.Hosts)

	wg.Wait()

	fmt.Fprintf(fd, `# Unbound config: ad domains and malware domains
#
# Auto-generated by %s on %s
# Total domains: %d, total hosts %d
#
# --- DO NOT EDIT --
server:
%s
    # Hosts
%s
# EOF
`, os.Args[0], time.Now(), len(b.Domains), len(b.Hosts), wd.String(), wh.String())
}
